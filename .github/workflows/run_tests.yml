name: Combined Tests and Reports

on: [pull_request]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  run-api-tests:
    runs-on: ubuntu-latest
    name: Run API Tests
    steps:
      - name: Checkout Backend repository
        uses: actions/checkout@v3
        with:
          repository: bondarenkokate73/simbirsoft_sdet_project
          path: backend

      - name: Set up Docker Compose
        run: sudo apt-get install -y docker-compose

      - name: Run docker-compose
        run: |
          cd backend
          docker compose up -d --build

      - name: Wait for Backend
        run: |
          timeout 120 bash -c '
            until [ "$(docker inspect -f "{{.State.Status}}" service)" = "running" ]; do
              echo "Waiting for container to start...";
              sleep 5;
            done
          '

      - name: Checkout tests repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies with uv
        run: |
          uv pip install --system -r requirements.txt

      - name: Run api tests
        run: |
          pytest -k "TestEntity" -v -n 3 --alluredir=allure-results/api
        continue-on-error: true

      - name: Store API allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-api
          path: allure-results/api
          retention-days: 1

  run-ui-tests:
    runs-on: ubuntu-latest
    name: Run UI Tests
    steps:
      - name: Checkout tests repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies with uv
        run: |
          uv pip install --system -r requirements.txt

      - name: Run ui tests
        run: |
          pytest tests/ui -v -n 3 --headless --alluredir=allure-results/ui
        continue-on-error: true

      - name: Store UI allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-ui
          path: allure-results/ui
          retention-days: 90

  generate-reports:
    runs-on: ubuntu-latest
    needs: [run-api-tests, run-ui-tests]
    name: Generate Reports
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '21.0.2'

      - name: Install Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz
          sudo tar -zxvf allure-2.29.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure

      - name: Download API results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-api
          path: allure-results/api

      - name: Download UI results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-ui
          path: allure-results/ui

      - name: Generate reports
        run: |
      
          rm -rf _site || true
          mkdir -p _site/{api-report,ui-report}
          
      
          if [ -d "allure-results/api" ]; then
            echo "Generating API report..."
            allure generate allure-results/api -o _site/api-report --clean
            find _site/api-report -type f \( -name '*.html' -o -name '*.js' \) -exec sed -i 's|/static/|./static/|g' {} \;
            echo '<base href="/SimbirsoftTask/api-report/">' >> _site/api-report/index.html
          else
            echo "No API results found, creating placeholder"
            echo "<h1>API Test Report</h1><p>No results available</p>" > _site/api-report/index.html
          fi

  
          if [ -d "allure-results/ui" ]; then
            echo "Generating UI report..."
            allure generate allure-results/ui -o _site/ui-report --clean
            find _site/ui-report -type f \( -name '*.html' -o -name '*.js' \) -exec sed -i 's|/static/|./static/|g' {} \;
            echo '<base href="/SimbirsoftTask/ui-report/">' >> _site/ui-report/index.html
          else
            echo "No UI results found, creating placeholder"
            echo "<h1>UI Test Report</h1><p>No results available</p>" > _site/ui-report/index.html
          fi

        
          cat <<EOF > _site/index.html
          <!DOCTYPE html>
          <html>
          <head>
            <title>Test Reports</title>
          </head>
          <body>
            <h1>Available Test Reports</h1>
            <ul>
              <li><a href="/SimbirsoftTask/api-report/">API Tests Report</a></li>
              <li><a href="/SimbirsoftTask/ui-report/">UI Tests Report</a></li>
            </ul>
          </body>
          </html>
          EOF

       
          touch _site/.nojekyll
          echo "Disabled Jekyll processing" > _site/.nojekyll

      - name: Verify reports
        run: |
          echo "API report files:"
          ls -la _site/api-report/
          
          echo "UI report files:"
          ls -la _site/ui-report/
          
          [ -f "_site/api-report/index.html" ] || echo "::error::API report missing!"
          [ -f "_site/ui-report/index.html" ] || echo "::error::UI report missing!"

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: _site
          retention-days: 1

  publish-reports:
    runs-on: ubuntu-latest
    needs: generate-reports
    name: Publish Reports
    steps:
      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          name: test-reports
          path: _site

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Print report URLs
        run: |
          echo "API Report: https://sfz111.github.io/SimbirsoftTask/api-report/"
          echo "UI Report: https://sfz111.github.io/SimbirsoftTask/ui-report/"
          echo "Main Page: https://sfz111.github.io/SimbirsoftTask/"
