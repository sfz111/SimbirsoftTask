name: API Tests

on: [ pull_request ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  run-api-tests:
    runs-on: ubuntu-latest
    name: Run API Tests

    steps:
      - name: Checkout Backend repository
        uses: actions/checkout@v3
        with:
          repository: bondarenkokate73/simbirsoft_sdet_project
          path: backend

      - name: Set up Docker Compose
        run: sudo apt-get install -y docker-compose

      - name: Run docker-compose
        run: |
          cd backend
          docker compose up -d --build

      - name: Wait for Backend
        run: |
          timeout 120 bash -c '
            until [ "$(docker inspect -f "{{.State.Status}}" service)" = "running" ]; do
              echo "Waiting for container to start...";
              sleep 5;
            done
          '

      - name: Checkout tests repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies with uv
        run: |
          uv pip install --system -r requirements.txt

      - name: Run api tests
        run: |
          pytest -k "TestEntity" -v -n 3 --alluredir=allure-results-api
        continue-on-error: true

      - name: Store API allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-api
          path: allure-results-api
          retention-days: 90

  generate-report:
    runs-on: ubuntu-latest
    needs: [ run-api-tests ]
    name: Generate Report

    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '21.0.2'

      - name: Install Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz
          sudo tar -zxvf allure-2.29.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure

      - name: Download API results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-api
          path: allure-results-api

      - name: Generate report
        run: |
          mkdir -p _site/api
          allure generate allure-results-api -o _site/api --clean
          # Fix paths for GitHub Pages
          find _site/api -type f \( -name '*.html' -o -name '*.js' \) -exec sed -i 's|/static/|./static/|g' {} \;
          echo '<base href="/SimbirsoftTask/api/">' >> _site/api/index.html

      - name: Add .nojekyll file
        run: |
          touch _site/.nojekyll
          echo "Disabled Jekyll processing" > _site/.nojekyll

      - name: Verify report structure
        run: |
          echo "Generated files:"
          ls -laR _site/api
          [ -f "_site/api/index.html" ] || { echo "Error: index.html not found"; exit 1; }

      - name: Upload report artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: _site
          retention-days: 90

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Publish Report

    steps:
      - name: Download report
        uses: actions/download-artifact@v4
        with:
          name: test-report
          path: _site

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

      - name: Print report URL
        run: |
          echo "API Report: https://sfz111.github.io/SimbirsoftTask/api/"
          echo "Direct link: https://sfz111.github.io/SimbirsoftTask/api/index.html"
          echo "If you see 404 error:"
          echo "1. Wait 2-5 minutes for GitHub Pages to update"
          echo "2. Check gh-pages branch in repository"
          echo "3. Verify report files exist in Actions artifacts"